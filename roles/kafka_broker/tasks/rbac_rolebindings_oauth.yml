---
- name: RBAC Setup Tasks
  import_role:
    name: common
    tasks_from: rbac_setup.yml
  vars:
    user: "{{kafka_broker_user}}"
    group: "{{kafka_broker_group}}"

- name: get token
  uri:
    url: "https://dev-59009577.okta.com/oauth2/aus96p2og3u7Cpwu65d7/v1/token"
    method: POST
    validate_certs: false
    return_content: true
    status_code: 200
    url_username: "0oa96pg3lgnBnhY9w5d7"
    url_password: "dshcfgYYnMWhFGIuLzNFQJPhichIRUHgYz9jjRKZLjTV0s97Jueji_8tIjfzExWH"
    force_basic_auth: true
    headers:
      Content-Type: application/x-www-form-urlencoded
    body_format: form-urlencoded
    body:
      - ["grant_type", "client_credentials"]
      - ["scope", "groups"]
  register: mds_token
  until: mds_token.status == 200
  retries: 10
  delay: 5
  when:
    - not ansible_check_mode
    - oauth_enabled|bool

- name: Grant role System Admin to Additional Kafka Broker users/groups
  uri:
    url: "{{mds_bootstrap_server_urls.split(',')[0]}}/security/1.0/principals/{% if 'User' not in item and 'Group' not in item %}User:{% endif %}{{item}}/roles/SystemAdmin"
    method: POST
    validate_certs: false
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{(mds_token.content | from_json).access_token}}"
    body_format: json
    body: >
      {
        "clusters": {
          "kafka-cluster": "{{kafka_cluster_id}}"
        }
      }
    status_code: 204
  register: kb_mds_result
  until: kb_mds_result.status == 204
  retries: "{{ mds_retries }}"
  delay: 5
  loop: "{{kafka_broker_additional_system_admins}}"
  when: not ansible_check_mode

# confluent iam rolebinding create --principal User:<audit-log-admin> --role ResourceOwner --resource Topic:confluent-audit-log-events --prefix --cluster-name audit_logs
- name: Grant Audit Logs Principal ResourceOwner on confluent-audit-log-events Prefixed Topics
  uri:
    url: "{{mds_bootstrap_server_urls.split(',')[0]}}/security/1.0/principals/User:{{audit_logs_destination_principal}}/roles/ResourceOwner/bindings"
    method: POST
    validate_certs: false
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{(mds_token.content | from_json).access_token}}"
    body_format: json
    body: >
      {
        "scope": {
          "clusterName": "{{audit_logs_destination_kafka_cluster_name}}"
        },
        "resourcePatterns": [{
          "resourceType": "Topic",
          "name": "confluent-audit-log-events",
          "patternType":"PREFIXED"
        }]
      }
    status_code: 204
  register: kb_mds_result
  until: kb_mds_result.status == 204
  retries: "{{ mds_retries }}"
  delay: 5
  when: audit_logs_destination_enabled|bool and not ansible_check_mode

# confluent iam rolebinding create --principal User:<audit-log-writer> --role DeveloperWrite --resource Topic:confluent-audit-log-events --prefix --cluster-name audit_logs
- name: Grant Audit Logs Principal DeveloperWrite on confluent-audit-log-events Prefixed Topics
  uri:
    url: "{{mds_bootstrap_server_urls.split(',')[0]}}/security/1.0/principals/User:{{audit_logs_destination_principal}}/roles/DeveloperWrite/bindings"
    method: POST
    validate_certs: false
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{(mds_token.content | from_json).access_token}}"
    body_format: json
    body: >
      {
        "scope": {
          "clusterName": "{{audit_logs_destination_kafka_cluster_name}}"
        },
        "resourcePatterns": [{
          "resourceType": "Topic",
          "name": "confluent-audit-log-events",
          "patternType":"PREFIXED"
        }]
      }
    status_code: 204
  register: kb_mds_result
  until: kb_mds_result.status == 204
  retries: "{{ mds_retries }}"
  delay: 5
  when: audit_logs_destination_enabled|bool and not ansible_check_mode
  run_once: true
